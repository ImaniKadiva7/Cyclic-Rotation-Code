// you can use includes, for example:
#include <algorithm>
#include <vector>
#include <iostream>

using namespace std;

// you can write to stdout for debugging purposes, e.g.
// cout << "this is a debug message" << endl;

int solution(vector<int> &A) {
    // Implement your solution here
    // A = [ 23171, 21011, 21123, 21366, 21013, 21367 ]
    if(A.empty())
    {
        return 0;
    }
    int N = A.size(), buying_price = A[0], possible_profit = 0, max_profit = 0;

    for(int i = 1; i < N; i++)
    {
        if(buying_price > A[i])
        {
            buying_price = A[i];
            possible_profit = 0;
        }
        else
        {
            possible_profit += (A[i] - A[i-1]);
            if(max_profit < possible_profit)
            {
                max_profit = possible_profit;
            }
        }
    }
    return max_profit;
}

//=====================================================================================

# you can write to stdout for debugging purposes, e.g.
# print("this is a debug message")

def solution(A):
    # Implement your solution here
    N = len(A)

    if N == 0:
        return 0
    
    buying_price = A[0]
    possible_profit = 0
    max_profit = 0

    for i in range(1, N):
        if buying_price > A[i]:
            buying_price = A[i]
            possible_profit = 0
        else:
            possible_profit += (A[i] - A[i-1])
            if max_profit < possible_profit:
                max_profit = possible_profit
    return max_profit
    pass