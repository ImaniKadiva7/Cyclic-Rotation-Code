// you can use includes, for example:
#include <algorithm>
#include <vector>
#include <iostream>

using namespace std;

// you can write to stdout for debugging purposes, e.g.
// cout << "this is a debug message" << endl;

int solution(vector<int> &A) {
    // Implement your solution here
    if(A.empty())
    {
        return 0;
    }
    // A = [ 2, 1, 1, 2, 3, 1 ]
    // sort A = [ 1, 1, 1, 2, 2, 3 ]
    int number_of_distinct_values = 1, N = A.size();
    sort(A.begin(), A.end());

    for(int i = 1; i < N; i++)
    {
        if(A[i] != A[i-1])
        {
            number_of_distinct_values++;
        }
    }
    return number_of_distinct_values;
}

//========================================================================

# you can write to stdout for debugging purposes, e.g.
# print("this is a debug message")

def solution(A):
    # Implement your solution here
    N = len(A)

    if N == 0:
        return 0
    A.sort()
    numberOfDistinctValues = 1
    for i in range(1, N):
        if A[i] != A[i-1]:
            numberOfDistinctValues += 1
    return numberOfDistinctValues
    pass